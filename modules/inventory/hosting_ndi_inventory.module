<?php
/**
 * @file
 * Code for the NDI Site Inventory feature.
 */

include_once 'hosting_ndi_inventory.features.inc';

/**
 * Implements hook_menu().
 */
function hosting_ndi_inventory_menu() {
  $items = array();

  $items['admin/hosting/inventory'] = array(
    'title' => 'Inventory',
    'description' => 'Configuration for site inventory.',
    'page arguments' => array('hosting_ndi_inventory_settings'),
    // @TODO: secure this.
    'access arguments' => array('access content'),
  );

  $items['node/%node/inventory'] = array(
    'title' => 'Inventory',
    'description' => 'A inventory fields for this site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hosting_ndi_inventory_site_page', 1),
    // @TODO: secure this.
    // @TODO: filter this to site nodes.
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function hosting_ndi_inventory_menu_alter(&$items) {
  $items['hosting/ndi/inventory/csv']['access callback'] = 'hosting_ndi_inventory_csv_access';
}

/**
 * Secure access to the CSV site inventory.
 */
function hosting_ndi_inventory_csv_access() {
  // Aegir admins have access.
  // @TODO: replace this with a granular permission.
  $admin_role = user_role_load_by_name('aegir administrator');
  if (user_has_role($admin_role->rid)) {
    return TRUE;
  }
  // Otherwise check for a key passed as a query parameter.
  $q = drupal_get_query_parameters();
  if (!array_key_exists('ndi_csv_key', $q)) {
    return FALSE;
  }
  if ($q['ndi_csv_key'] === variable_get('ndi_inventory_csv_key')) {
    return TRUE;
  }
}

/**
 * Form definition for our inventory site page.
 */
function hosting_ndi_inventory_site_page($form, &$form_state, $node) {
  // Stash our original node in the form for retrieval in our submit handler.
  $form['#node'] = $node;

  // Extract each of the enabled inventory fields from the node to attach to
  // this form.
  foreach (_get_inventory_fields() as $name => $enabled) {
    if ($enabled) {
      field_attach_form('node', $node, $form, $form_state, NULL, array('field_name' => $name));
    }
  }
  _sort_contact_fields_into_fieldsets($form);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#weight' => 99,
  );

  return $form;
}

/**
 * Fields in groups/fieldsets don't appear in our separate form. So we add
 * those fieldsets manually here.
 */
function _sort_contact_fields_into_fieldsets(&$form) {
  // Move all inventory fields (except the "Inventory enabled" checkbox) into a
  // fieldset, so we can easily hide them, when a site isn't being managed in
  // the inventory.
  $form['fieldset_ndi_inventory'] = array(
    '#type' => 'fieldset',
    '#weight' => 5,
    '#states' => array(
      // Hide the rest of the inventory fields when the 'Inventory enabled'
      // checkbox is disabled.
      'invisible' => array(
        ':input[name="field_inventory_enabled[und]"]' => array('checked' => FALSE),
      ),
    ),
  );
  foreach (_get_inventory_fields() as $name => $enabled) {
    if ($enabled && $name != 'field_inventory_enabled') {
      $form['fieldset_ndi_inventory'][$name] = $form[$name];
      unset($form[$name]);
    }
  }
  $structure = array(
    'fieldset_client_poc1' => array(
      'Client POC 1' => array(
        'field_client_poc1_first_name',
        'field_client_poc1_last_name',
        'field_client_poc1_phone',
        'field_client_poc1_email',
      ),
    ),
    'fieldset_client_poc2' => array(
      'Client POC 2' => array(
        'field_client_poc2_first_name',
        'field_client_poc2_last_name',
        'field_client_poc2_phone',
        'field_client_poc2_email',
      ),
    ),
    'fieldset_ndi_poc' => array(
      'NDI POC' => array(
        'field_ndi_poc_first_name',
        'field_ndi_poc_last_name',
        'field_ndi_poc_phone',
        'field_ndi_poc_email',
      ),
    ),
    'fieldset_nditech_poc' => array(
      'NDItech POC' => array(
        'field_nditech_poc_first_name',
        'field_nditech_poc_last_name',
        'field_nditech_manager_email',
      ),
    ),
  );
  foreach ($structure as $fieldset => $info) {
    foreach ($info as $title => $fields) {
      $form['fieldset_ndi_inventory'][$fieldset] = array(
        '#type' => 'fieldset',
        '#title' => $title,
        '#weight' => 5,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      foreach ($fields as $field) {
        $form['fieldset_ndi_inventory'][$fieldset][$field] = $form['fieldset_ndi_inventory'][$field];
        unset($form['fieldset_ndi_inventory'][$field]);
      }
    }
  }
}

/**
 * Submit handler for the inventory site page.
 */
function hosting_ndi_inventory_site_page_submit($form, &$form_state) {
  // Retrieve the node as originally provided to our form.
  $node = $form['#node'];

  // Update each of the enabled inventory fields on the node from the form
  // state, ignoring the rest.
  foreach (_get_inventory_fields() as $name => $enabled) {
    if ($enabled) {
      $node->$name = $form_state['values'][$name];
    }
    else {
      unset($node->$name);
    }
  }

  // Save the resulting field values.
  field_attach_presave('node', $node);
  field_attach_update('node', $node);
}

/**
 * NDI site inventory configuration form.
 */
function hosting_ndi_inventory_settings() {
  $form = array();
  $form['ndi_inventory_fields'] = array(
    '#title' => t('Site inventory fields'),
    '#description' => t('Select which fields to move into the inventory tab for each site.'),
    '#type' => 'checkboxes',
    '#options' => _get_inventory_field_options(),
    '#default_value' => _get_inventory_fields(),
  );
  $form['ndi_inventory_csv_key'] = array(
    '#title' => t('Inventory API key'),
    '#description' => t('A secret key to secure access to the CSV site inventory file. When retrieving the CSV file, this value must be added as a query paranter (i.e., "http://example.com/hosting/ndi/inventory/csv?ndi_csv_key=&lt;KEY>")'),
    '#type' => 'textfield',
    '#size' => 45,
    '#default_value' => variable_get('ndi_inventory_csv_key', FALSE),
  );
  return system_settings_form($form);
}

/**
 * Helper function to get list of inventory fields.
 */
function _get_inventory_fields() {
  return variable_get('ndi_inventory_fields', array());
}

/**
 * Helper function to get list of available inventory fields.
 */
function _get_inventory_field_options() {
  $options = array();
  $field_instances = field_info_instances();
  foreach ($field_instances['node']['site'] as $name => $field_info) {
    // Provide both human-readable label and machine name.
    $options[$name] = t($field_info['label'] . ' (' . $name . ')');
  }
  return $options;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hosting_ndi_inventory_form_site_node_form_alter(&$form, $form_state) {
  foreach (_get_inventory_fields() as $field => $hidden) {
    if ($hidden) {
      $form[$field]['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_node_view_alter().
 */
function hosting_ndi_inventory_node_view_alter(&$build) {
  $full_node = $build['#view_mode'] == 'full';
  $is_a_site = $build['#bundle'] == 'site';
  $inv_enabled = (boolean) $build['field_inventory_enabled']['#items'][0]['value'];
  #if ($build['#view_mode'] == 'full' && $build['#bundle'] == 'site' && $build['field_inventory_enabled']['#items'][0]['value']) {
  // Only display inventory fieldset when inventory is enabled.
  if ($full_node && $is_a_site && !$inv_enabled) {
    foreach (_get_inventory_fields() as $field => $hidden) {
      $build[$field]['#access'] = FALSE;
    }
  }
}
